You&#39;d need to work out the appropriate surrogate pair if you want it in a string literal. (In C# you could write &quot;\U0001f000&quot; - \u is used for the BMP, and \U for full Unicode.)

In Java you could do:

    String foo = new String(new int[]{0x1f000}, 0, 1);

if you wanted to still see the &quot;1f000&quot;-ness of it. I confess I can&#39;t remember the high/low surrogate ranges off the top of my head :(
Jon&#39;s answer should work, but you can also use the `appendCodePoint` method in StringBuilder or StringBuffer.

    StringBuilder sb = new StringBuilder();
    sb.appendCodePoint(0x1f000);

Both techniques do the conversion to surrogate pairs for you.

It sounds like your problem now is getting the characters to display properly.  If you&#39;re trying to display them on the console, forget it; the console on most machines is way too limited.  I suggest you either write your output to a file and use a good text editor to read it, or display the output in a Swing component like a JTextPane.