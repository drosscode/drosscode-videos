There are (at least) two ways to do this:

1. Use an array and expand it using `&quot;${array[@]}&quot;`:

        bar() {
            local i=0 args=()
            for arg in &quot;$@&quot;
            do
                args[$i]=&quot;prefix $arg&quot;
                ((++i))
            done
    
            foo &quot;${args[@]}&quot;
        }

    So, what have we learned? `&quot;${array[@]}&quot;` is to `${array[*]}` what `&quot;$@&quot;` is to `$*`.

2. Or if you do not want to use arrays you need to use `eval`:

        bar() {
            local args=()
            for arg in &quot;$@&quot;
            do
                args=&quot;$args \&quot;prefix $arg\&quot;&quot;
            done
    
            eval foo $args
        }
You can use the arrays just as you suggest, with a small detail changed. The line calling foo should read

     foo &quot;${args[@]}&quot;


I had a problem with this too as well.  I was writing a bash script to backup the important files on my windows computer (cygwin).  I tried the array approach too, and still had some issues.  Not sure exactly how I fixed it, but here&#39;s the parts of my code that are important in case it will help you.

    WORK=&quot;d:\Work Documents\*&quot;
    #	prompt and 7zip each file
    for x in $SVN $WEB1 $WEB2 &quot;$WORK&quot; $GRAPHICS $W_SQL
    do
    	echo &quot;Add $x to archive? (y/n)&quot;
    	read DO
    	if [ &quot;$DO&quot; == &quot;y&quot; ]; then
    		echo &quot;compressing $x&quot;
    		7zip a $W_OUTPUT &quot;$x&quot;
    	fi
    	echo &quot;&quot;
    done
Here is a shorter version which does not require the use of a numeric index:

(example: building arguments to a `find` command)

&lt;!-- language: bash --&gt;

    dir=$1
    shift
    for f in &quot;$@&quot; ; do
        args+=(-iname &quot;*$f*&quot;)
    done
    find &quot;$dir&quot; &quot;${args[@]}&quot;


Use [arrays][2] (one of the [hidden features][1] in Bash).

  [1]: https://stackoverflow.com/questions/211378/hidden-features-of-bash#211525
  [2]: http://tldp.org/LDP/abs/html/arrays.html
