Include the phrase:

    @echo off

right at the top of your bat script.
I have proposed in StackOverflow question a way to [run a batch file in the background (**no DOS windows displayed**)][1]

That should answer your question.

Here it is:

-----

From your first script, call your second script with the following line:

    wscript.exe invis.vbs run.bat %*

Actually, you are calling a vbs script with:

- the \[path]\name of your script
- all the other arguments needed by your script (`%*`)

Then, invis.vbs will call your script with the [Windows Script Host Run() method][2], which takes:

- intWindowStyle : 0 means &quot;invisible windows&quot;
- bWaitOnReturn : false means your first script does not need to wait for your second script to finish

See the question for the full invis.vbs script:

    
    Set WshShell = WScript.CreateObject(&quot;WScript.Shell&quot;)
    WshShell.Run &quot;&quot;&quot;&quot; &amp; WScript.Arguments(0) &amp; &quot;&quot;&quot;&quot; &amp; sargs, 0, False
                                                             ^
                                 means &quot;invisible window&quot; ---| 

----------

Update after Tammen&#39;s feedback:

If you are in a DOS session and you want to launch another script &quot;in the background&quot;, a simple `/b` (as detailed in the [same aforementioned question][3]) can be enough:

&gt; You can use **`start /b second.bat`** to launch a second batch file asynchronously from your first that shares your first one&#39;s window.


  [1]: https://stackoverflow.com/questions/298562
  [2]: http://msdn.microsoft.com/en-us/library/d5fk67ky(VS.85).aspx
  [3]: https://stackoverflow.com/questions/298562
Try **[SilentCMD][1]**. This is a small freeware program that executes a batch file without displaying the command prompt window.


  [1]: http://www.stephan-brenner.com/?page_id=345
Use Advanced BAT to EXE Converter from http://www.battoexeconverter.com

This will allow you to embed any additional binaries with your batch file in to one stand alone completely silent EXE and its freeware
If i want to run command promt in silent mode, then there is a simple vbs command:

    Set ws=CreateObject(&quot;WScript.Shell&quot;)
    ws.Run &quot;TASKKILL.exe /F /IM iexplore.exe&quot;

if i wanted to **open an url in cmd silently**, then here is a code:

    Set WshShell = WScript.CreateObject(&quot;WScript.Shell&quot;) 
    Return = WshShell.Run(&quot;iexplore.exe http://otaxi.ge/log/index.php&quot;, 0)
    &#39;wait 10 seconds
    WScript.sleep 10000 
    Set ws=CreateObject(&quot;WScript.Shell&quot;)
    ws.Run &quot;TASKKILL.exe /F /IM iexplore.exe&quot;
I&#39;m pretty confident I like this method the best. Copy and paste the code below into a .vbs file. From there you&#39;ll call the batch file... so make sure you edit the last line to specify the path and name of the batch file (which should contain the file you&#39;d like to launch or perform the actions you need performed)

    Const HIDDEN_WINDOW = 12 

    strComputer = &quot;.&quot; 
    Set objWMIService = GetObject(&quot;winmgmts:&quot; _ 
    &amp; &quot;{impersonationLevel=impersonate}!\\&quot; &amp; strComputer &amp; &quot;\root\cimv2&quot;) 
    Set objStartup = objWMIService.Get(&quot;Win32_ProcessStartup&quot;) 

    Set objConfig = objStartup.SpawnInstance_ 
    objConfig.ShowWindow = HIDDEN_WINDOW 
    Set objProcess = GetObject(&quot;winmgmts:root\cimv2:Win32_Process&quot;) 
    errReturn = objProcess.Create(&quot;C:\PathOfFile\name.bat&quot;, null, objConfig, intProcessID)
It definitely worked for me. Comments are welcomed :)
I think this is the easiest and shortest solution to running a batch file without opening the DOS window, it can be very distracting when you want to schedule a set of commands to run periodically, so the DOS window keeps popping up, here is your solution.
Use a VBS Script to call the batch file ...

    Set WshShell = CreateObject(&quot;WScript.Shell&quot; ) 
    WshShell.Run chr(34) &amp; &quot;C:\Batch Files\ mycommands.bat&quot; &amp; Chr(34), 0 
    Set WshShell = Nothing 

Copy the lines above to an editor and save the file with .VBS extension. Edit the .BAT file name and path accordingly.
Use Bat To Exe Converter to do this&lt;br&gt;

http://download.cnet.com/Bat-To-Exe-Converter/3000-2069_4-10555897.html&lt;br&gt; (Choose &lt;b&gt;Direct Download Link&lt;/b&gt;)

1 - Open Bat to Exe Converter, select your Bat file.&lt;br&gt;
2 - In Option menu select &quot;Invisible Application&quot;, then press compile button. &lt;br&gt;

Done!
I&#39;m created [RunApp](https://github.com/futurist/runapp) to do such a job and also using it in my production env, hope it&#39;s helps.

The config like below:

**file: config.arg**

    :style:hidden

    MyBatchFile.bat
    arg1
    arg2

And launch `runapp.exe` instead.

Another way of doing it, without 3rd party programs nor converters (&quot;batch to exe&quot; programs actually just put your batch file in the tmp folder and then run it silently so anyone can just fetch it from there an get your code) no vbs files (because nobody knows vbs) just one line at the beginning of the batch file.



    @echo off &gt; NUL
The below silent .bat file code prevents the need to have two bat files (using &quot;goto&quot; and &quot;:&quot;). 

It does it all in the same .bat file. **Tested and confirmed working in Windows 10**


***Make sure you replace &quot;C:\pathToFile\ThisBatFile.bat &quot; with the path to this same .bat file! Keep the space after &quot;.bat&quot;.***

    @echo off
    if [%1]==[] (
        goto PreSilentCall
    ) else (
        goto SilentCall
    )

    :PreSilentCall
    REM Insert code here you want to have happen BEFORE this same .bat file is called silently
    REM such as setting paths like the below two lines

    set WorkingDirWithSlash=%~dp0
    set WorkingDirectory=%WorkingDirWithSlash:~0,-1%

    REM below code will run this same file silently, but will go to the SilentCall section
    cd C:\Windows\System32
    if exist C:\Windows\Temp\invis.vbs ( del C:\Windows\Temp\invis.vbs /f /q )
    echo CreateObject(&quot;Wscript.Shell&quot;).Run &quot;C:\pathToFile\ThisBatFile.bat &quot; ^&amp; WScript.Arguments(0), 0, False &gt; C:\Windows\Temp\invis.vbs
    wscript.exe C:\Windows\Temp\invis.vbs Initialized
    if %ERRORLEVEL%==0 (
        echo Successfully started SilentCall code. This command prompt can now be exited.
        goto Exit
    )


    :SilentCall
    cd %WorkingDirectory%
    REM Insert code you want to be done silently. 
    REM Make sure this section has no errors as you won&#39;t be able to tell if there are any, 
    REM since it will be running silently. You can add a greater than symbol at the end of
    REM your commands in this section to output the results to a .txt file for the purpose 
    REM of debugging this section of code.


    :Exit

If your .bat file needs **more** than just the &quot;Initialized&quot; argument (which tells the bat file to go to :SilentCall section), add &quot;**^&amp; WScript.Arguments(1),**&quot; , &quot;**^&amp; WScript.Arguments(2),**&quot; ,etc. depending on the number of arguments, then edit the line where wscript.exe is called: 

&quot;wscript.exe C:\Windows\Temp\invis.vbs Initialized **BatFileArgOne** **BatFileArgTwo**&quot;