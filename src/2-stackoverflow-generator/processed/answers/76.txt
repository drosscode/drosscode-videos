In order to get an empty type, I believe you will have to revert to the non-light syntax (interface...end).  

    #light
    
    type IMarker = 
        interface
        end
    
    type Marker =
        interface IMarker


Off the top of my head (without firing up Visual Studio):

    type IMarker ;
    
    type MyClass =
      interface IMarker

  
    type IMarker = interface     end
    type MyClass = interface IMarker

(Update)

F# always defines interfaces implicitly , you need to cast to the interface in order to use it.

[Why F# interface differs greatly from C#][1]


  [1]: http://cs.hubfs.net/forums/thread/7523.aspx
An old question, but the required syntax (F# 2.0) for this special case is actually:

    type IMarker = interface end

    type Marker =
      class
        interface IMarker
      end

Or alternatively (including a constructor for Marker):

    type IMarker = interface end

    type Marker() =
        interface IMarker


Just writing

    type Marker =
      interface IMarker

is not possible because it looks like you want to create a new interface type.

