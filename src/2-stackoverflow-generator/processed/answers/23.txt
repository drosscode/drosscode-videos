in script :

    function overlayvis(blck) {
      el = document.getElementById(blck.id);
      el.style.visibility = (el.style.visibility == &#39;visible&#39;) ? &#39;hidden&#39; : &#39;visible&#39;;
    }

activator link, followed by content (no reason that couldn&#39;t be else on the page):

    &lt;div onclick=&#39;overlayvis(showhideme)&quot;&gt;show/hide stuff&lt;/div&gt;
    &lt;div id=&quot;showhideme&quot;&gt;
      ... content to hide / unhide ...
    &lt;/div&gt;

I got this from https://stackoverflow.com/questions/6578427/modal-window-javascript-css-overlay - had to search for the source and was pleased to find it was this site. :)

Add an onclick handler to stop event propagation.

With JQuery use:
onclick=&quot;event.stopPropagation()&quot;

With Prototype use:
onclick=&quot;Event.stop(event)&quot;
I don&#39;t really know if this would work, but try giving the link element a bigger `z-index` value than the toggle_section div.

something like :

    #toggle_section a { z-index: 10; }
The most simple solution is to **add an extra onclick handler to the link** within your DIV which stops event propagation:

    &lt;div id=&quot;toggle_section&quot; 
         onclick=&quot;javascript: new Effect.toggle(&#39;toggle_stuff&#39;, &#39;slide&#39;);&quot;&gt;
        &lt;div id=&quot;toggle_title&quot;&gt;Some title&lt;/div&gt;
        &lt;div id=&quot;toggle_stuff&quot;&gt;
            some content stuff
            &lt;a href=&quot;/foo.php&quot;
                onclick=&quot;Event.stop(event);&quot;
            &gt;Some link&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;

The above example uses Prototype&#39;s [`Event.stop()`][1] function in order to facilitate a cross browser event propagation stop.

As you use the inline `onclick()` handler, most (if not all) browser will traverse the event in the bubbling phase first (which is what you want).

A good guide to understanding the actual reasons behind this behaviour and the differences between *event capturing* and *event bubbling* can be found at the excellent [Quirksmode.][2]


  [1]: http://www.prototypejs.org/api/event/stop
  [2]: http://www.quirksmode.org/js/events_order.html
After I posted my first question I could not wait to try to think about it once more and it seems that I have found a quite simple way to achieve this.

I have moved the onlick `Effect.toggle` into a separate function like: 

    function someClick(event) {
        if (event.target.nodeName == &#39;A&#39;) {
            return;
        } else {
            new Effect.toggle(&#39;toggle_stuff&#39;, &#39;slide&#39;);
        }
    }

I suppose this would only work for `A` tags and not anything else that is clickable though.
