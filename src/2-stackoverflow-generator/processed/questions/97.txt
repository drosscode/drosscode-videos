This is in continuation with the question posted here:
[https://stackoverflow.com/questions/408358/finding-the-center-of-mass-on-a-2d-bitmap][1] which talked about finding the center of mass in a boolean matrix, as the example was given.

Suppose now we expand the matrix to this form:

    0 1 2 3 4 5 6 7 8 9
    1 . X X . . . . . .
    2 . X X X . . X . .
    3 . . . . . X X X .
    4 . . . . . . X . .
    5 . X X . . . . . .
    6 . X . . . . . . .
    7 . X . . . . . . .
    8 . . . . X X . . .
    9 . . . . X X . . .
As you can see we now have 4 centers of mass, for 4 different clusters.

We already know how to find a center of mass given that only one exists, if we run that algorithm on this matrix we'll get some point in the middle of the matrix which does not help us.

What can be a good, correct and fast algorithm to find these clusters of mass?




  [1]: https://stackoverflow.com/questions/408358/finding-the-center-of-mass-on-a-2d-bitmap