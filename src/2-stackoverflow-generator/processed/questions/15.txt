At the company I work for, I have created a Error Logging class to handle errors in my ASP.net application.  It is a custom class because we are not allowed to install additional software on our servers (nLog, log4net, etc).

I currently use it in two of my projects and have seen some good results from it.  Right now I am trapping the errors that cause page and application errors.  It sends and stores the error message and all inner exceptions.  

The problem I am having now is, I am receiving errors that I am not quite sure how to reproduce.  I have not heard any error reports from any of my users.  I am not sure what they are doing, or even if they are seeing these as errors.

I am thinking about creating an Event Log on each page, or the ones I want additional information on.  Keeping it as a Session variable on the page, and writing events to it (start/end of functions, variable changes, etc).  Then only if an error is called to have that send along with the error message to see if it gives a better picture of what is going on.  I am hoping that doing it this way will not give me tons of event logs when all users access the application, just want was going on right before the error happen with the one user.

Do you know of any pitfalls I should watchout with method?

Do you have any advise for things to look for?  

Update:

@Saret: I understnad where you are coming from with that response and I agree.  I am fairly new to this company and still need to learn how they do things.  In the past I have had conversations with my coworkers how it would be great to have this product, or use this open source project.  The problem comes down to is, we work on secure systems and getting approval to get these things takes a lot of time, top cover, and dealing with all the red tape.  I will look into the situation further because I believe having a good error logging system in place is important, currently nothing is being used.

@Jim Blizard: I wanted to try to get away from logging/storing everything someplace to come back and find out what is important to the situation that caused the error.  I didn't want to fall into overload of information that is talked about in artical that Roberto Barros linked.  My current method of thinking is, keeping a string in memory on each page, and if an error is rasied, on the pages Page_Error event, grab that string and attach it to the exception that is getting logged.  That way I am only logging the error/exceptions that occured and storing the event log with that error.  If nothing happens, that log that was being created is dropped into the bit bucket never to be seen again.

@Roberto Barros:  Thanks for that link, I remember reading it somewhere but forgot to save it.